/* generated by rust_qt_binding_generator */
#include "bindings.h"

namespace {
    inline void logDayTotalChanged(Log* o)
    {
        emit o->dayTotalChanged();
    }
}
extern "C" {
    Log::Private* log_new(Log*, void (*)(Log*));
    void log_free(Log::Private*);
    quint64 log_day_total_get(const Log::Private*);
};

Log::Log(bool /*owned*/, QObject *parent):
    QObject(parent),
    m_d(0),
    m_ownsPrivate(false)
{
}

Log::Log(QObject *parent):
    QObject(parent),
    m_d(log_new(this,
        logDayTotalChanged)),
    m_ownsPrivate(true)
{
}

Log::~Log() {
    if (m_ownsPrivate) {
        log_free(m_d);
    }
}
quint64 Log::dayTotal() const
{
    return log_day_total_get(m_d);
}
